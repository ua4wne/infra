---
- hosts: docker_servers
  remote_user: ubuntu
  become: true
  vars:
    user: ubuntu
  #   default_container_name: app
  #   default_container_image: rai68/skillbox_app

  tasks:
    - name: Install aptitude
      apt:
        name: aptitude
        state: latest
        update_cache: true

    - name: Install required system packages
      apt:
        pkg:
          - apt-transport-https
          - ca-certificates
          - curl
          - software-properties-common
          # - python3-pip
          # - virtualenv
          # - python3-setuptools
        state: latest
        update_cache: true

    - name: Add Docker GPG apt Key
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Add Docker Repository
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu jammy stable
        state: present

    - name: Update apt and install docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: true

    - name: check docker is active
      service:
        name: docker
        state: started
        enabled: yes

    - name: Ensure group "docker" exists
      ansible.builtin.group:
        name: docker
        state: present

    - name: adding ubuntu to docker group
      user:
        name: "{{ user }}"
        groups: docker
        append: yes

    - name: Create a 4096-bit SSH key for user in ~/.ssh/id_rsa
      ansible.builtin.user:
        name: "{{ user }}"
        generate_ssh_key: yes
        ssh_key_bits: 4096
        ssh_key_file: .ssh/id_rsa

    - name: add to authorized_keys
      shell:
        chdir: "/home/{{ user }}"
        cmd: cat .ssh/id_rsa.pub >> .ssh/authorized_keys

    - name: run install_runner script
      ansible.builtin.script: install_runner.sh

    # - name: Install Docker Module for Python
    #   pip:
    #     name: docker

    # - name: Pull default Docker image
    #   community.docker.docker_image:
    #     name: "{{ default_container_image }}"
    #     source: pull

    # - name: Create new container
    #   community.docker.docker_container:
    #     name: "{{ default_container_name }}"
    #     image: "{{ default_container_image }}"
    #     state: started
    #     ports:
    #       - "80:8080"
